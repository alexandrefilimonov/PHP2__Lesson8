USE world;
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
-------- table#1 role 
CREATE TABLE IF NOT EXISTS `role` (
  `id_role` int(11) NOT NULL AUTO_INCREMENT,
  `role_name` varchar(50) NOT NULL,
  PRIMARY KEY (`id_role`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--------- table#2 user 
CREATE TABLE IF NOT EXISTS  `users` (
  
  `id_user` int(11) NOT NULL AUTO_INCREMENT,
  
  `user_name` varchar(50) NOT NULL,
  
  `user_login` varchar(50) NOT NULL,
  
  `user_password` varchar(70) NOT NULL,
  
  `user_last_action` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_user`)

) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--------- table#3 user_role
 CREATE TABLE IF NOT EXISTS `user_role` (
  `id_user_role` int(11) NOT NULL AUTO_INCREMENT,
  `id_user` int(11) NOT NULL, 
  `id_role` int(11) NOT NULL, 
  PRIMARY KEY (`id_user_role`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

ALTER TABLE user_role
ADD FOREIGN KEY fk_user(id_user)
REFERENCES user(id_user)
ON DELETE NO ACTION
ON UPDATE CASCADE;

ALTER TABLE user_role
ADD FOREIGN KEY fk_role(id_role)
REFERENCES role(id_role)
ON DELETE NO ACTION
ON UPDATE CASCADE;

--------- table#4 pages 
CREATE TABLE IF NOT EXISTS `pages` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--------- table#5 categories 
 CREATE TABLE IF NOT EXISTS `categories` (
  `id_category` int(11) NOT NULL AUTO_INCREMENT,
  `status` int(11) NOT NULL, 
  `name` varchar(50) NOT NULL,
  `parent_id` int(11) NOT NULL, 
  PRIMARY KEY (`id_category`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--------- table#6 goods  
 CREATE TABLE IF NOT EXISTS `goods` (
  `id_good` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(50) NOT NULL,
  `price` double NOT NULL, 
  `id_category` int(11) NOT NULL, 
  `status` int(11) NOT NULL, 
  PRIMARY KEY (`id_good`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
ALTER TABLE goods
ADD FOREIGN KEY fk_category(id_category)
REFERENCES categories(id_category)
ON DELETE NO ACTION
ON UPDATE CASCADE;

--------- table#7 order_status  
CREATE TABLE IF NOT EXISTS `order_status` (
  `id_order_status` int(11) NOT NULL AUTO_INCREMENT,
  `order_status_name` varchar(50) NOT NULL,
  PRIMARY KEY (`id_order_status`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--------- table#8 orders  
 CREATE TABLE IF NOT EXISTS `orders` (
  `id_order` int(11) NOT NULL AUTO_INCREMENT,
  `id_user` int(11) NOT NULL, 
  `amount` double NOT NULL, 
  `datetime_create` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `id_order_status` int(11) NOT NULL, 
  PRIMARY KEY (`id_order`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--ALTER TABLE orders
--ADD FOREIGN KEY fk_order_user(id_user)
--REFERENCES user(id_user)
--ON DELETE NO ACTION
--ON UPDATE NO ACTION;

ALTER TABLE orders
ADD FOREIGN KEY fk_order_status(id_order_status)
REFERENCES order_status(id_order_status)
ON DELETE NO ACTION
ON UPDATE CASCADE;

--------- table#9 basket  
 CREATE TABLE IF NOT EXISTS `basket` (
  `id_basket` int(11) NOT NULL AUTO_INCREMENT,
  `id_user` int(11) NOT NULL, 
  `id_good` int(11) NOT NULL, 
  `price` double NOT NULL, 
  `is_in_order` tinyint(4) NOT NULL, 
  `id_order` int(11) NOT NULL, 
  PRIMARY KEY (`id_basket`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

--ALTER TABLE basket  
--ADD FOREIGN KEY fk_basket_user(id_user)
--REFERENCES user(id_user)
--ON DELETE NO ACTION
--ON UPDATE CASCADE;

ALTER TABLE basket  
ADD FOREIGN KEY fk_basket_good(id_good)
REFERENCES goods(id_good)
ON DELETE NO ACTION
ON UPDATE NO ACTION;

--ALTER TABLE basket  
--ADD FOREIGN KEY fk_basket_order(id_order)
--REFERENCES orders(id_order)
--ON DELETE NO ACTION
--ON UPDATE CASCADE;

--------- Дамп данных таблицы `role`
INSERT INTO `role` (`role_name`) VALUES
('User'),
('Admin') 
--------- Дамп данных таблицы `user` Alex pwd=12345, John pwd=00000
INSERT INTO users (`user_name`, `user_login`, `user_password`, `user_last_action`) VALUES ('Alex', 'alex', 'bec7b6bd40fc9229a12c69107b27380a827ccb0eea8a706c4c34a16891f84e7b',null) 
INSERT INTO users (`user_name`, `user_login`, `user_password`, `user_last_action`) VALUES ('John', 'john', 'f63a95fbc32ed2335a4d74df1aa90416dcddb75469b4b4875094e14561e573d8',null) 
--INSERT INTO `users` (`user_name`, `user_login`, `user_password`, `user_last_action`) VALUES
--('Alex', 'alex', '827ccb0eea8a706c4c34a16891f84e7b', '2018-10-12 17:54:20'),
--('Bob', 'bob', '12345', '2018-10-12 17:54:20'),  
--('Nikolay', 'nick3', '67890', '2018-10-12 17:54:20') 
--------- Дамп данных таблицы `user_role`
INSERT INTO `user_role` (`id_user`, `id_role`) VALUES
(1,2),
(2,1) 
--------- Дамп данных таблицы `categories`
INSERT INTO `categories` (`status`, `name`, `parent_id`) VALUES
(1,'bouquet',1) 
--------- Дамп данных таблицы `goods`
INSERT INTO `goods` (`name`, `price`,`id_category`, `status`) VALUES
 
('Букет "Подарочный"',650.00,1,1),

('Букет "С днем рожденья!"', 750.00,1,1),

('Букет "Сюрприз!"', 850.00,1,1),

('Букет "Свадебный-1"', 1050.00,1,1),

('Букет "Свадебный-2"', 1150.00,1,1),

('Букет "Свадебный-3"', 670.00,1,1),

('Букет "Свадебный-4"', 690.00,1,1),

('Букет "Прости"',770.00,1,1),

('Букет "С добрым утром"',800.00,1,1),

('Букет "Любимой дочке"',500.00,1,1) 

--------- Дамп данных таблицы `order_status`
INSERT INTO `order_status` (`order_status_name`) VALUES
('active'),
('inactive') 

--INSERT INTO `basket` (`id_user`, `id_good`, `price`, `is_in_order`, `id_order`) VALUES


--INSERT INTO `shop` (`id`, `name`, `price`, `info`, `date_creation`) VALUES
--(1, 'Lamborgini', 1000, 'В наличии', '2018-04-28 17:54:20'),
--(2, 'Победа', 1500, 'В музее', '2018-04-28 17:54:20'),
--(3, 'Dodge ', 1200, 'ожидается', '2018-04-28 17:55:16'),
--(4, 'BMW', 1300, 'в наличии', '2018-04-28 17:55:16'),
--(5, 'Dodge ', 1200, 'ожидается', '2018-04-28 17:55:16'),
--(6, 'Lada', 1300, 'в наличии', '2018-04-28 17:55:16'),
--(7, 'Ford ', 1200, 'ожидается', '2018-04-28 17:55:16'),
--(8, 'Pego', 1300, 'в наличии', '2018-04-28 17:55:16');

